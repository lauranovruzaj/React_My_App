{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/React/first-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./components/UI/Card\";\nimport ExpenseItem from \"./components/Expenses/ExpenseItem\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport ExpensesFilter from \"./components/Filters/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: 'el1',\n  title: 'Toilet paper',\n  amount: 94.65,\n  date: new Date(2021, 7, 14)\n}, {\n  id: 'el2',\n  title: 'Car Insurance',\n  amount: 284.98,\n  date: new Date(2022, 2, 14)\n}, {\n  id: 'el3',\n  title: 'New Tv',\n  amount: 494.65,\n  date: new Date(2022, 3, 24)\n}, {\n  id: 'el4',\n  title: 'food',\n  amount: 194.65,\n  date: new Date(2022, 4, 16)\n}];\n\nconst App = () => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2022');\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const choosedYear = year => {\n    setFilteredYear(year);\n  };\n\n  const filteredItems = expenses.filter(expense => {\n    return expense.date.getFullYear() == filteredYear;\n  });\n\n  let expensiveContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Items found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 26\n  }, this);\n\n  if (filteredItems.length > 0) {\n    expensiveContent = filteredItems.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onYearChange: choosedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), expensiveContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"frE9i0i9XABjWu8G4BCuLJp+v6s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/laura/Desktop/React/first-project/src/App.js"],"names":["React","useState","Card","ExpenseItem","NewExpense","ExpensesFilter","DUMMY_EXPENSES","id","title","amount","date","Date","App","filteredYear","setFilteredYear","expenses","setExpenses","addExpenseHandler","expense","prevExpenses","choosedYear","year","filteredItems","filter","getFullYear","expensiveContent","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;;AAEA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADqB,EAOrB;AACEJ,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAPqB,EAarB;AACEJ,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAbqB,EAmBrB;AACEJ,EAAAA,EAAE,EAAE,KADN;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAnBqB,CAAvB;;AA2BA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACK,cAAD,CAAxC;;AAEA,QAAMW,iBAAiB,GAAIC,OAAD,IAAa;AACrCF,IAAAA,WAAW,CAAEG,YAAD,IAAkB;AAC5B,aAAO,CAACD,OAAD,EAAU,GAAGC,YAAb,CAAP;AACD,KAFU,CAAX;AAGD,GAJD;;AAMA,QAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5BP,IAAAA,eAAe,CAACO,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGP,QAAQ,CAACQ,MAAT,CAAgBL,OAAO,IAAI;AAC/C,WAAOA,OAAO,CAACR,IAAR,CAAac,WAAb,MAA8BX,YAArC;AACD,GAFqB,CAAtB;;AAIA,MAAIY,gBAAgB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvB;;AACA,MAAIH,aAAa,CAACI,MAAd,GAAsB,CAA1B,EAA6B;AAC3BD,IAAAA,gBAAgB,GAAGH,aAAa,CAACK,GAAd,CAAkBT,OAAO,iBAC1C,QAAC,WAAD;AAEA,MAAA,KAAK,EAAEA,OAAO,CAACV,KAFf;AAGA,MAAA,MAAM,EAAEU,OAAO,CAACT,MAHhB;AAIA,MAAA,IAAI,EAAES,OAAO,CAACR;AAJd,OACMQ,OAAO,CAACX,EADd;AAAA;AAAA;AAAA;AAAA,YADiB,CAAnB;AAOD;;AAED,sBAEI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEU;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAE,cAAF;AAAiB,MAAA,QAAQ,EAAEJ,YAA3B;AAAyC,MAAA,YAAY,EAAEO;AAAvD;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGK,gBAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBD,CAjDD;;GAAMb,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"./components/UI/Card\";\nimport ExpenseItem from \"./components/Expenses/ExpenseItem\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport ExpensesFilter from \"./components/Filters/ExpensesFilter\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'el1',\n    title: 'Toilet paper',\n    amount: 94.65,\n    date: new Date(2021, 7, 14)\n  },\n  {\n    id: 'el2',\n    title: 'Car Insurance',\n    amount: 284.98,\n    date: new Date(2022, 2, 14)\n  },\n  {\n    id: 'el3',\n    title: 'New Tv',\n    amount: 494.65,\n    date: new Date(2022, 3, 24)\n  },\n  {\n    id: 'el4',\n    title: 'food',\n    amount: 194.65,\n    date: new Date(2022, 4, 16)\n  }\n];\n\nconst App = () => {\n  const [filteredYear, setFilteredYear] = useState('2022');\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n  \n  const choosedYear = (year) => {\n    setFilteredYear(year);\n  }\n\n  const filteredItems = expenses.filter(expense => {\n    return expense.date.getFullYear() == filteredYear;\n  });\n\n  let expensiveContent = <p>No Items found</p>;\n  if (filteredItems.length> 0) {\n    expensiveContent = filteredItems.map(expense => \n      <ExpenseItem  \n      key= {expense.id}\n      title={expense.title} \n      amount={expense.amount} \n      date={expense.date} />\n    )\n  }\n\n  return (\n    \n      <Card className=\"expenses\">\n        <NewExpense onAddExpense={addExpenseHandler}/>\n        < ExpensesFilter selected={filteredYear} onYearChange={choosedYear}/>\n        {/* {filteredItems.length == 0 ? <p>No Items found</p> : \n          filteredItems.map(expense => \n            <ExpenseItem  \n            key= {expense.id}\n            title={expense.title} \n            amount={expense.amount} \n            date={expense.date} />\n          )\n        } */}\n\n        {expensiveContent}\n      \n     </Card>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}