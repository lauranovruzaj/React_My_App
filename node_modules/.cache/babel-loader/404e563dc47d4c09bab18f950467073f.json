{"ast":null,"code":"var _jsxFileName = \"/Users/laura/Desktop/React/first-project/src/components/Expenses/ExpesesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }]; // for(const expense of props.expenses) {\n  //     const expenseMonth = expense.date.getMonth(); // starting at 0 => Junary => 0\n  //     chartDataPoints[expenseMonth].value += expense.amount;\n  // }\n\n  props.expenses.map(expense => {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => Junary => 0\n\n    console.log(expenseMonth);\n    chartDataPoints[expenseMonth].value += expense.amount;\n  });\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"sources":["/Users/laura/Desktop/React/first-project/src/components/Expenses/ExpesesChart.js"],"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","expenses","map","expense","expenseMonth","date","getMonth","console","log","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAMC,eAAe,GAAG,CACpB;AAACC,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADoB,EAEpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFoB,EAGpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAHoB,EAIpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAJoB,EAKpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GALoB,EAMpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANoB,EAOpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAPoB,EAQpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GARoB,EASpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAToB,EAUpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAVoB,EAWpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAXoB,EAYpB;AAACD,IAAAA,KAAK,EAAC,KAAP;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAZoB,CAAxB,CAD6B,CAgB7B;AACA;AACA;AACA;;AAEAH,EAAAA,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmBC,OAAO,IAAI;AAC1B,UAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,QAAb,EAArB,CAD0B,CACoB;;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAN,IAAAA,eAAe,CAACM,YAAD,CAAf,CAA8BJ,KAA9B,IAAuCG,OAAO,CAACM,MAA/C;AACH,GAJD;AAKA,sBAAO,QAAC,KAAD;AAAO,IAAA,UAAU,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3BD;;KAAMF,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\nimport Chart from \"../Chart/Chart\"\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        {label:'Jan', value: 0},\n        {label:'Feb', value: 0},\n        {label:'Mar', value: 0},\n        {label:'Apr', value: 0},\n        {label:'May', value: 0},\n        {label:'Jun', value: 0},\n        {label:'Jul', value: 0},\n        {label:'Aug', value: 0},\n        {label:'Sep', value: 0},\n        {label:'Oct', value: 0},\n        {label:'Nov', value: 0},\n        {label:'Dec', value: 0}\n    ]\n\n    // for(const expense of props.expenses) {\n    //     const expenseMonth = expense.date.getMonth(); // starting at 0 => Junary => 0\n    //     chartDataPoints[expenseMonth].value += expense.amount;\n    // }\n\n    props.expenses.map(expense => {\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => Junary => 0\n        console.log(expenseMonth);\n        chartDataPoints[expenseMonth].value += expense.amount;\n    })\n    return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart;"]},"metadata":{},"sourceType":"module"}